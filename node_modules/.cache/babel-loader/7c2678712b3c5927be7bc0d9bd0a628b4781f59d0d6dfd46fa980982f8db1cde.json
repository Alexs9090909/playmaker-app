{"ast":null,"code":"const apiKey = \"BQAdWaHnVSALSU79mwzaSdb6qt9hUF4eMdvMT01vT4KxlRGZu3zHt1MbC0OeX4JS8fKofRQyHgAC8IKEPKEGlsqxslcaIVD4V4nJvsYXf0TKn-gjo81vssO3F-fxrvmHmsbNCeL_hX9dUTUJRJ0si6uBIOMWT_JDa5HD-5Ge-vHTNfQ0MBys5tNwS49CqTEFNiG7WA\"; // Access token à renouveler toutes les heures \n\nconst Spotify = {\n  search(term) {\n    return fetch(`https://api.spotify.com/v1/search?q=${term}&type=track`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      // console.log(jsonResponse);\n      // console.log('jsonResponse is an ' + typeof jsonResponse);\n      // console.log(jsonResponse.tracks)\n      // console.log(jsonResponse.tracks.items)\n      const items = jsonResponse.tracks.items;\n      // const arrayFromJson = Array.from(jsonResponse.tracks.items);\n\n      // console.log('arrayFromJson is an ' + typeof arrayFromJson);\n      // console.log('arrayFromJson is ' + typeof arrayFromJson);\n      // console.log(arrayFromJson);\n\n      // console.log(items[0]);\n      const itemsArray = Object.values(items);\n      // console.log(typeof itemsArray);\n      // console.log(itemsArray);\n      // console.log(typeof itemsArray);\n      // console.log(itemsArray);\n\n      /* const arrayFromJsonMap = items.map((track, index) => {\n          [index] = {\n              id: track.id,\n              name: track.name,\n              artist: track.artists[0].name,\n              album: track.album,\n              url: track.uri,\n          }\n      }) */\n\n      // console.log(arrayFromJsonMap);\n      return itemsArray;\n\n      /*\n      if (arrayFromJson) { // track est il bien le bon suffixe ?\n          return arrayFromJson.map((track) => ({\n              id: track.id,\n              name: track.name,\n              artist: track.artist,\n              album: track.album,\n              url: track.url,\n          }))\n      } */\n    });\n  },\n\n  save(playlistTitle, playlistTracks) {\n    return fetch(`https://api.spotify.com/v1/search?q=${term}&type=track`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      const items = jsonResponse.tracks.items;\n      const itemsArray = Object.values(items);\n\n      /* const arrayFromJsonMap = items.map((track, index) => {\n          [index] = {\n              id: track.id,\n              name: track.name,\n              artist: track.artists[0].name,\n              album: track.album,\n              url: track.uri,\n          }\n      }) */\n\n      // console.log(arrayFromJsonMap);\n      return itemsArray;\n\n      /*\n      if (arrayFromJson) { // track est il bien le bon suffixe ?\n          return arrayFromJson.map((track) => ({\n              id: track.id,\n              name: track.name,\n              artist: track.artist,\n              album: track.album,\n              url: track.url,\n          }))\n      } */\n    });\n  }\n};\n\nexport default Spotify;\n\n/*\n\nhttp://localhost:3000/#access_token=\n\nBQBku-j3foefvjUm3GxZjRUXJ_5ciYFmGyagrLVNlgOemKelaJrmfLh2ElKLbM0DizDWDv0vQuYSzsX7fwBra-W9fMKnEvkV9N_7jrzuKNN20lcFRxbEnsuArA3ul_YTfYjzi9jACM1phV7F0sHceIBxO3aJIUor01h5ZgGgw0SVuI4Oc9b8T3sbbp483aOi4halXw\n\n&token_type=Bearer&expires_in=3600&state=bJdqHW8CAkGD2fUb\n\n\nhttp://localhost:3000/#access_token=\n\nBQAdWaHnVSALSU79mwzaSdb6qt9hUF4eMdvMT01vT4KxlRGZu3zHt1MbC0OeX4JS8fKofRQyHgAC8IKEPKEGlsqxslcaIVD4V4nJvsYXf0TKn-gjo81vssO3F-fxrvmHmsbNCeL_hX9dUTUJRJ0si6uBIOMWT_JDa5HD-5Ge-vHTNfQ0MBys5tNwS49CqTEFNiG7WA\n\n&token_type=Bearer&expires_in=3600&state=Gpj8Z5JbRFRCrCEB\n\n*/","map":{"version":3,"names":["apiKey","Spotify","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","items","tracks","itemsArray","Object","values","save","playlistTitle","playlistTracks"],"sources":["/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/utils/Spotify.js"],"sourcesContent":["const apiKey = \"BQAdWaHnVSALSU79mwzaSdb6qt9hUF4eMdvMT01vT4KxlRGZu3zHt1MbC0OeX4JS8fKofRQyHgAC8IKEPKEGlsqxslcaIVD4V4nJvsYXf0TKn-gjo81vssO3F-fxrvmHmsbNCeL_hX9dUTUJRJ0si6uBIOMWT_JDa5HD-5Ge-vHTNfQ0MBys5tNwS49CqTEFNiG7WA\" // Access token à renouveler toutes les heures \n\nconst Spotify = {\n    search(term) {\n        return fetch(\n            `https://api.spotify.com/v1/search?q=${term}&type=track`,\n            {\n                headers: {\n                    Authorization: `Bearer ${apiKey}` \n                },\n            }\n\n        )\n        .then((response) => {\n            return response.json();\n        })\n        .then((jsonResponse) => {\n\n            // console.log(jsonResponse);\n            // console.log('jsonResponse is an ' + typeof jsonResponse);\n            // console.log(jsonResponse.tracks)\n            // console.log(jsonResponse.tracks.items)\n            const items = jsonResponse.tracks.items;\n            // const arrayFromJson = Array.from(jsonResponse.tracks.items);\n\n            // console.log('arrayFromJson is an ' + typeof arrayFromJson);\n            // console.log('arrayFromJson is ' + typeof arrayFromJson);\n            // console.log(arrayFromJson);\n\n            // console.log(items[0]);\n            const itemsArray = Object.values(items);\n            // console.log(typeof itemsArray);\n            // console.log(itemsArray);\n            // console.log(typeof itemsArray);\n            // console.log(itemsArray);\n\n            /* const arrayFromJsonMap = items.map((track, index) => {\n                [index] = {\n                    id: track.id,\n                    name: track.name,\n                    artist: track.artists[0].name,\n                    album: track.album,\n                    url: track.uri,\n                }\n            }) */\n            \n            // console.log(arrayFromJsonMap);\n            return itemsArray;\n            \n\n\n            /*\n            if (arrayFromJson) { // track est il bien le bon suffixe ?\n                return arrayFromJson.map((track) => ({\n                    id: track.id,\n                    name: track.name,\n                    artist: track.artist,\n                    album: track.album,\n                    url: track.url,\n                }))\n            } */\n        })\n    },\n\n    save(playlistTitle,playlistTracks) {\n        return fetch(\n            `https://api.spotify.com/v1/search?q=${term}&type=track`,\n            {\n                headers: {\n                    Authorization: `Bearer ${apiKey}` \n                },\n            }\n\n        )\n        .then((response) => {\n            return response.json();\n        })\n        .then((jsonResponse) => {\n\n\n            const items = jsonResponse.tracks.items;\n\n\n            const itemsArray = Object.values(items);\n\n\n            /* const arrayFromJsonMap = items.map((track, index) => {\n                [index] = {\n                    id: track.id,\n                    name: track.name,\n                    artist: track.artists[0].name,\n                    album: track.album,\n                    url: track.uri,\n                }\n            }) */\n            \n            // console.log(arrayFromJsonMap);\n            return itemsArray;\n            \n\n\n            /*\n            if (arrayFromJson) { // track est il bien le bon suffixe ?\n                return arrayFromJson.map((track) => ({\n                    id: track.id,\n                    name: track.name,\n                    artist: track.artist,\n                    album: track.album,\n                    url: track.url,\n                }))\n            } */\n        })\n    }\n}\n\n\n\nexport default Spotify;\n\n\n\n/*\n\nhttp://localhost:3000/#access_token=\n\nBQBku-j3foefvjUm3GxZjRUXJ_5ciYFmGyagrLVNlgOemKelaJrmfLh2ElKLbM0DizDWDv0vQuYSzsX7fwBra-W9fMKnEvkV9N_7jrzuKNN20lcFRxbEnsuArA3ul_YTfYjzi9jACM1phV7F0sHceIBxO3aJIUor01h5ZgGgw0SVuI4Oc9b8T3sbbp483aOi4halXw\n\n&token_type=Bearer&expires_in=3600&state=bJdqHW8CAkGD2fUb\n\n\nhttp://localhost:3000/#access_token=\n\nBQAdWaHnVSALSU79mwzaSdb6qt9hUF4eMdvMT01vT4KxlRGZu3zHt1MbC0OeX4JS8fKofRQyHgAC8IKEPKEGlsqxslcaIVD4V4nJvsYXf0TKn-gjo81vssO3F-fxrvmHmsbNCeL_hX9dUTUJRJ0si6uBIOMWT_JDa5HD-5Ge-vHTNfQ0MBys5tNwS49CqTEFNiG7WA\n\n&token_type=Bearer&expires_in=3600&state=Gpj8Z5JbRFRCrCEB\n\n*/"],"mappings":"AAAA,MAAMA,MAAM,GAAG,wMAAwM,EAAC;;AAExN,MAAMC,OAAO,GAAG;EACZC,MAAMA,CAACC,IAAI,EAAE;IACT,OAAOC,KAAK,CACP,uCAAsCD,IAAK,aAAY,EACxD;MACIE,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,MAAO;MACpC;IACJ,CAEJ,CAAC,CACAO,IAAI,CAAEC,QAAQ,IAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,YAAY,IAAK;MAEpB;MACA;MACA;MACA;MACA,MAAMC,KAAK,GAAGD,YAAY,CAACE,MAAM,CAACD,KAAK;MACvC;;MAEA;MACA;MACA;;MAEA;MACA,MAAME,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;MACvC;MACA;MACA;MACA;;MAEA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEY;MACA,OAAOE,UAAU;;MAIjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,CAAC,CAAC;EACN,CAAC;;EAEDG,IAAIA,CAACC,aAAa,EAACC,cAAc,EAAE;IAC/B,OAAOd,KAAK,CACP,uCAAsCD,IAAK,aAAY,EACxD;MACIE,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,MAAO;MACpC;IACJ,CAEJ,CAAC,CACAO,IAAI,CAAEC,QAAQ,IAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,YAAY,IAAK;MAGpB,MAAMC,KAAK,GAAGD,YAAY,CAACE,MAAM,CAACD,KAAK;MAGvC,MAAME,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;;MAGvC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEY;MACA,OAAOE,UAAU;;MAIjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,CAAC,CAAC;EACN;AACJ,CAAC;;AAID,eAAeZ,OAAO;;AAItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}