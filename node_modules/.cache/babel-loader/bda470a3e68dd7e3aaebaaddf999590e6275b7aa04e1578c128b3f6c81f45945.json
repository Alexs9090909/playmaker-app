{"ast":null,"code":"var _jsxFileName = \"/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import './App.css';\nimport styles from './App.module.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Tracklist from '../Tracklist/Tracklist';\nimport Spotify from '../../utils/Spotify';\nimport PlaylistBar from '../PlaylistBar/PlaylistBar';\nimport Playlist from '../Playlist/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // on déclare le state de la liste de résultats de la recherche\n  const [trackSearchList, setTrackSearchList] = useState([]);\n\n  // on déclare la fonction de recherche qui renvoie au fetch situé dans utils/Spotify et on met à jour le state de la liste de résultat avec\n  const searchSpotify = async term => {\n    const trackSearchResults = await Spotify.search(term);\n    setTrackSearchList(trackSearchResults);\n  };\n\n  // on déclare le state de la liste de tracks destinées à la playlist\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const updatePlaylistTracks = newPlaylistTrack => {\n    setPlaylistTracks([...playlistTracks, newPlaylistTrack]);\n    console.log(newPlaylistTrack);\n  };\n\n  // on déclare la fonction qui enlève les tracks de la playlist\n  const removePlaylistTrack = indexToRemove => {\n    const updatedArray = playlistTracks.filter();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.BlueSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SearchContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.SearchTitle,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          className: styles.SearchBar,\n          searchSpotify: searchSpotify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tracklist, {\n          tracklistData: trackSearchList,\n          updatePlaylistTracks: updatePlaylistTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.RedSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.PlaylistContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.PlaylistTitle,\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PlaylistBar, {\n          className: styles.PlaylistTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          tracklistData: playlistTracks,\n          removePlaylistTrack: removePlaylistTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WhmMa1/RsDWlR2g/X9RXCR9Cnrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","SearchBar","Tracklist","Spotify","PlaylistBar","Playlist","jsxDEV","_jsxDEV","App","_s","trackSearchList","setTrackSearchList","searchSpotify","term","trackSearchResults","search","playlistTracks","setPlaylistTracks","updatePlaylistTracks","newPlaylistTrack","console","log","removePlaylistTrack","indexToRemove","updatedArray","filter","className","Container","children","BlueSection","SearchContainer","SearchTitle","fileName","_jsxFileName","lineNumber","columnNumber","tracklistData","RedSection","PlaylistContainer","PlaylistTitle","_c","$RefreshReg$"],"sources":["/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n// import './App.css';\nimport styles from './App.module.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Tracklist from '../Tracklist/Tracklist';\nimport Spotify from '../../utils/Spotify';\nimport PlaylistBar from '../PlaylistBar/PlaylistBar';\nimport Playlist from '../Playlist/Playlist';\n\n\nconst App = () => {\n\n  // on déclare le state de la liste de résultats de la recherche\n  const [trackSearchList, setTrackSearchList] = useState([]);\n\n  // on déclare la fonction de recherche qui renvoie au fetch situé dans utils/Spotify et on met à jour le state de la liste de résultat avec\n  const searchSpotify = async (term) => {\n    const trackSearchResults = await Spotify.search(term);\n    setTrackSearchList(trackSearchResults);\n  }\n\n  // on déclare le state de la liste de tracks destinées à la playlist\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  const updatePlaylistTracks = (newPlaylistTrack) => {\n    setPlaylistTracks([...playlistTracks, newPlaylistTrack]);\n    console.log(newPlaylistTrack);\n  };\n\n\n  // on déclare la fonction qui enlève les tracks de la playlist\n  const removePlaylistTrack = (indexToRemove) => {\n    const updatedArray = playlistTracks.filter()\n\n  }\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.BlueSection}>\n        <div className={styles.SearchContainer}>\n          <h1 className={styles.SearchTitle}>Search</h1>\n          <SearchBar className={styles.SearchBar} searchSpotify={searchSpotify}/>\n          <Tracklist tracklistData={trackSearchList} updatePlaylistTracks={updatePlaylistTracks} />\n        </div>\n      </div>\n      <div className={styles.RedSection}>\n        <div className={styles.PlaylistContainer}>\n            <h1 className={styles.PlaylistTitle}>Playlist</h1>\n            <PlaylistBar className={styles.PlaylistTitle} />\n            <Playlist tracklistData={playlistTracks} removePlaylistTrack={removePlaylistTrack} />  \n        </div>    \n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}