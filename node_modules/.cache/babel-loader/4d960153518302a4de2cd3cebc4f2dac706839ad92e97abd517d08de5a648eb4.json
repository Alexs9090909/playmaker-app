{"ast":null,"code":"var _jsxFileName = \"/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import './App.css';\nimport styles from './App.module.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Tracklist from '../Tracklist/Tracklist';\nimport Spotify from '../../utils/Spotify';\nimport PlaylistBar from '../PlaylistBar/PlaylistBar';\nimport Playlist from '../Playlist/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // on déclare le state de la liste de résultats de la recherche\n  const [trackSearchList, setTrackSearchList] = useState([]);\n\n  // on déclare la fonction de recherche qui renvoie au fetch situé dans utils/Spotify et on met à jour le state de la liste de résultat avec\n  const searchSpotify = async term => {\n    const trackSearchResults = await Spotify.search(term);\n    setTrackSearchList(trackSearchResults);\n  };\n\n  // on déclare le state de la liste de tracks destinées à la playlist\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n  // on déclare la fonction qui permet de rajouter des tracks (faudrait peut-être l'appeler addPlaylistTracks)\n  const addPlaylistTracks = newPlaylistTrack => {\n    setPlaylistTracks([...playlistTracks, newPlaylistTrack]);\n  };\n\n  // on déclare la fonction qui enlève les tracks de la playlist\n  const removePlaylistTrack = indexToRemove => {\n    const updatedArray = playlistTracks.filter((_, index) => index !== indexToRemove);\n    setPlaylistTracks(updatedArray);\n  };\n\n  // on déclare la fonction qui va sauvegarder la playlist en renvoyant vers un fetch POST\n  /* const saveSpotifyPlaylist = async (playlistTitle, playlistTracks) => {\n    await Spotify.save(playlistTitle, playlistTracks);\n  }\n  */\n\n  //Temporaires tests :\n\n  const saveSpotifyPlaylist = (playlistTitle, playlistTracks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.BlueSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SearchContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.SearchTitle,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          className: styles.SearchBar,\n          searchSpotify: searchSpotify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tracklist, {\n          tracklistData: trackSearchList,\n          addPlaylistTracks: addPlaylistTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.RedSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.PlaylistContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.PlaylistTitle,\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PlaylistBar, {\n          className: styles.PlaylistTitle,\n          saveSpotifyPlaylist: saveSpotifyPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistData: playlistTracks,\n          removePlaylistTrack: removePlaylistTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WhmMa1/RsDWlR2g/X9RXCR9Cnrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","SearchBar","Tracklist","Spotify","PlaylistBar","Playlist","jsxDEV","_jsxDEV","App","_s","trackSearchList","setTrackSearchList","searchSpotify","term","trackSearchResults","search","playlistTracks","setPlaylistTracks","addPlaylistTracks","newPlaylistTrack","removePlaylistTrack","indexToRemove","updatedArray","filter","_","index","saveSpotifyPlaylist","playlistTitle","className","Container","children","BlueSection","SearchContainer","SearchTitle","fileName","_jsxFileName","lineNumber","columnNumber","tracklistData","RedSection","PlaylistContainer","PlaylistTitle","playlistData","_c","$RefreshReg$"],"sources":["/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\n// import './App.css';\nimport styles from './App.module.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Tracklist from '../Tracklist/Tracklist';\nimport Spotify from '../../utils/Spotify';\nimport PlaylistBar from '../PlaylistBar/PlaylistBar';\nimport Playlist from '../Playlist/Playlist';\n\n\nconst App = () => {\n\n  // on déclare le state de la liste de résultats de la recherche\n  const [trackSearchList, setTrackSearchList] = useState([]);\n\n  // on déclare la fonction de recherche qui renvoie au fetch situé dans utils/Spotify et on met à jour le state de la liste de résultat avec\n  const searchSpotify = async (term) => {\n    const trackSearchResults = await Spotify.search(term);\n    setTrackSearchList(trackSearchResults);\n  }\n\n  // on déclare le state de la liste de tracks destinées à la playlist\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n\n\n  // on déclare la fonction qui permet de rajouter des tracks (faudrait peut-être l'appeler addPlaylistTracks)\n  const addPlaylistTracks = (newPlaylistTrack) => {\n    setPlaylistTracks([...playlistTracks, newPlaylistTrack]);\n  };\n\n\n  // on déclare la fonction qui enlève les tracks de la playlist\n  const removePlaylistTrack = (indexToRemove) => {\n    const updatedArray = playlistTracks.filter((_,index) => index !== indexToRemove);\n    setPlaylistTracks(updatedArray);\n  }\n\n  // on déclare la fonction qui va sauvegarder la playlist en renvoyant vers un fetch POST\n  /* const saveSpotifyPlaylist = async (playlistTitle, playlistTracks) => {\n    await Spotify.save(playlistTitle, playlistTracks);\n  }\n*/\n\n  //Temporaires tests :\n\n  const saveSpotifyPlaylist = (playlistTitle, playlistTracks)\n\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.BlueSection}>\n        <div className={styles.SearchContainer}>\n          <h1 className={styles.SearchTitle}>Search</h1>\n          <SearchBar className={styles.SearchBar} searchSpotify={searchSpotify}/>\n          <Tracklist tracklistData={trackSearchList} addPlaylistTracks={addPlaylistTracks} />\n        </div>\n      </div>\n      <div className={styles.RedSection}>\n        <div className={styles.PlaylistContainer}>\n            <h1 className={styles.PlaylistTitle}>Playlist</h1>\n            <PlaylistBar className={styles.PlaylistTitle} saveSpotifyPlaylist={saveSpotifyPlaylist} />\n            <Playlist playlistData={playlistTracks} removePlaylistTrack={removePlaylistTrack} />  \n        </div>    \n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}