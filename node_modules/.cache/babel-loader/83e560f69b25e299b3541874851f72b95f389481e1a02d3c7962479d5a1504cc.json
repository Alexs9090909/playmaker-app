{"ast":null,"code":"const apiKey = \"BQA9g99DF86es3fOmsZihC5oR6A1PWTwzQej-XQgI27M-Ht4NVp6D4mgSjTXd9icQlRYpMdQCd1bYUG532bkxyxoHxHo9A_x75H36bFgonBq-Y6IjPpkSX_5F0ouatDllyPMQdMsJyEUwEaw9Lg-JJro6GfQeW0kaFI0JmE0BzryJ-v5dDDujONa-5oRUaanReIyt_IbFMt5keSXvte51Cs_uZZtopj1o0sVoB4RXgJV2jrOgxE1uxYTJCzc\"; // Access token à renouveler toutes les heures \n\nconst Spotify = {\n  search(term) {\n    return fetch(`https://api.spotify.com/v1/search?q=${term}&type=track`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      const items = jsonResponse.tracks.items;\n      const itemsArray = Object.values(items);\n      return itemsArray;\n    });\n  },\n  save(playlistTitle, playlistTracks) {\n    return fetch(`https://api.spotify.com/v1/me`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      const user_id = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${user_id}/playlists`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          \"name\": `${playlistTitle}`,\n          \"description\": \"New playlist description\",\n          \"public\": false\n        })\n      }).then(secondResponse => {\n        return secondResponse.json();\n      }, networkError => console.log(networkError.message)).then(secondJsonResponse => {\n        const playlist_id = secondJsonResponse.id;\n        console.log('hello its me');\n        console.log('is playlistTracks an array ? >' + Array.isArray(playlistTracks));\n        return fetch(`https://api.spotify.com/v1/users/${user_id}/playlists/${playlist_id}/tracks`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({\n            \"uris\": `${playlistTracks}`,\n            \"position\": 0\n          })\n        });\n      });\n    }).catch(error => {\n      console.error('Erreur lors de la requête man :', error);\n    });\n  }\n};\nexport default Spotify;\n\n/*\n\n\nhttp://localhost:3000/#access_token=\n\nBQCkgDy6I7scm-6-2_O6kisSHV5Y41fDR83_fSgFk2phtbDghTqLI-tvHkGcgSgSgvsIdeNENhjqM5d7egjKrAc99y8haGPNUfVOPIpMK6Oxg174g6XoAfTqSc_htgI7xj5oNwTetlb1TAa0zdtK8VMedeeB1oVZa4PjRk4-1yAhOzIIsGTB31DEynXFdWpG5qatbLo4GbuUNqAmnQKOZJJBkAuaodEa9PimN3nai3Y-w6HX32XPrLABPDlI\n\n&token_type=Bearer&expires_in=3600&state=zHTL5QnoFFY5hZ5Z\n\nhttp://localhost:3000/#access_token=\n\nBQA9g99DF86es3fOmsZihC5oR6A1PWTwzQej-XQgI27M-Ht4NVp6D4mgSjTXd9icQlRYpMdQCd1bYUG532bkxyxoHxHo9A_x75H36bFgonBq-Y6IjPpkSX_5F0ouatDllyPMQdMsJyEUwEaw9Lg-JJro6GfQeW0kaFI0JmE0BzryJ-v5dDDujONa-5oRUaanReIyt_IbFMt5keSXvte51Cs_uZZtopj1o0sVoB4RXgJV2jrOgxE1uxYTJCzc\n\n&token_type=Bearer&expires_in=3600&state=rveUwozN6Q3FiBeU\n\n\n\nhttp://localhost:3000/#access_token=\n\nBQBt8YkdNRO2VkO8uKutQ1ZWh3e3PkN38wSvz3pTO8U6Y4uITr7gHnBzti5SVVsiBLcI2XHssOGazoef2grHpABuYo4ERB3_lE2UvMwFYR4n6qezsdpXhcWIza1SopRPQT_0uZ6qVZoMYKtk_Gv7xjoD-7MZMOsGMAB9kFi1IIskSl0eNn0o5bcyN_OmsWDLDPh6xdDBQWQqcpsd5_5TGvA7hbt-Y3ew9iHcZd5zDIf1glFHH-_KZVRWt5Q6&token_type=Bearer&expires_in=3600&state=Sl05j13T5DhmZOHG\n\n\n\n*/\n\n/* jusqu'ici ca fonctionne */","map":{"version":3,"names":["apiKey","Spotify","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","items","tracks","itemsArray","Object","values","save","playlistTitle","playlistTracks","user_id","id","method","body","JSON","stringify","secondResponse","networkError","console","log","message","secondJsonResponse","playlist_id","Array","isArray","catch","error"],"sources":["/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/utils/Spotify.js"],"sourcesContent":["const apiKey = \"BQA9g99DF86es3fOmsZihC5oR6A1PWTwzQej-XQgI27M-Ht4NVp6D4mgSjTXd9icQlRYpMdQCd1bYUG532bkxyxoHxHo9A_x75H36bFgonBq-Y6IjPpkSX_5F0ouatDllyPMQdMsJyEUwEaw9Lg-JJro6GfQeW0kaFI0JmE0BzryJ-v5dDDujONa-5oRUaanReIyt_IbFMt5keSXvte51Cs_uZZtopj1o0sVoB4RXgJV2jrOgxE1uxYTJCzc\" // Access token à renouveler toutes les heures \n\nconst Spotify = {\n    search(term) {\n        return fetch(\n            `https://api.spotify.com/v1/search?q=${term}&type=track`,\n            {\n                headers: {\n                    Authorization: `Bearer ${apiKey}`\n                },\n            }\n\n        )\n            .then((response) => {\n                return response.json();\n            })\n            .then((jsonResponse) => {\n                const items = jsonResponse.tracks.items;\n                const itemsArray = Object.values(items);\n                return itemsArray;\n            })\n    },\n\n    save(playlistTitle, playlistTracks) {\n        return fetch(\n            `https://api.spotify.com/v1/me`,\n            {\n                headers: {\n                    Authorization: `Bearer ${apiKey}`\n                },\n            }\n        )\n            .then((response) => {\n                return response.json();\n            })\n            .then((jsonResponse) => {\n                const user_id = jsonResponse.id;\n                return fetch(\n                    `https://api.spotify.com/v1/users/${user_id}/playlists`,\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${apiKey}`\n                        },\n                        body: JSON.stringify({\n                            \"name\": `${playlistTitle}`,\n                            \"description\": \"New playlist description\",\n                            \"public\": false\n                        }),\n                    }\n                )\n                    .then((secondResponse) => {\n                        return secondResponse.json();\n                    }, networkError => console.log(networkError.message)\n                    ).then(secondJsonResponse => {\n                        const playlist_id = secondJsonResponse.id;\n                        console.log('hello its me');\n                        console.log('is playlistTracks an array ? >' + Array.isArray(playlistTracks))\n                        return fetch(\n                            `https://api.spotify.com/v1/users/${user_id}/playlists/${playlist_id}/tracks`,\n                            {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    Authorization: `Bearer ${apiKey}`\n                                },\n                                body: JSON.stringify({\n                                    \"uris\": `${playlistTracks}`,\n                                    \"position\": 0\n                                }),\n                            }\n                        )\n                    })\n                    ;\n            })\n\n            .catch((error) => {\n                console.error('Erreur lors de la requête man :', error);\n            });\n    }\n}\n\n\nexport default Spotify;\n\n\n\n/*\n\n\nhttp://localhost:3000/#access_token=\n\nBQCkgDy6I7scm-6-2_O6kisSHV5Y41fDR83_fSgFk2phtbDghTqLI-tvHkGcgSgSgvsIdeNENhjqM5d7egjKrAc99y8haGPNUfVOPIpMK6Oxg174g6XoAfTqSc_htgI7xj5oNwTetlb1TAa0zdtK8VMedeeB1oVZa4PjRk4-1yAhOzIIsGTB31DEynXFdWpG5qatbLo4GbuUNqAmnQKOZJJBkAuaodEa9PimN3nai3Y-w6HX32XPrLABPDlI\n\n&token_type=Bearer&expires_in=3600&state=zHTL5QnoFFY5hZ5Z\n\nhttp://localhost:3000/#access_token=\n\nBQA9g99DF86es3fOmsZihC5oR6A1PWTwzQej-XQgI27M-Ht4NVp6D4mgSjTXd9icQlRYpMdQCd1bYUG532bkxyxoHxHo9A_x75H36bFgonBq-Y6IjPpkSX_5F0ouatDllyPMQdMsJyEUwEaw9Lg-JJro6GfQeW0kaFI0JmE0BzryJ-v5dDDujONa-5oRUaanReIyt_IbFMt5keSXvte51Cs_uZZtopj1o0sVoB4RXgJV2jrOgxE1uxYTJCzc\n\n&token_type=Bearer&expires_in=3600&state=rveUwozN6Q3FiBeU\n\n\n\nhttp://localhost:3000/#access_token=\n\nBQBt8YkdNRO2VkO8uKutQ1ZWh3e3PkN38wSvz3pTO8U6Y4uITr7gHnBzti5SVVsiBLcI2XHssOGazoef2grHpABuYo4ERB3_lE2UvMwFYR4n6qezsdpXhcWIza1SopRPQT_0uZ6qVZoMYKtk_Gv7xjoD-7MZMOsGMAB9kFi1IIskSl0eNn0o5bcyN_OmsWDLDPh6xdDBQWQqcpsd5_5TGvA7hbt-Y3ew9iHcZd5zDIf1glFHH-_KZVRWt5Q6&token_type=Bearer&expires_in=3600&state=Sl05j13T5DhmZOHG\n\n\n\n*/\n\n\n/* jusqu'ici ca fonctionne */"],"mappings":"AAAA,MAAMA,MAAM,GAAG,8PAA8P,EAAC;;AAE9Q,MAAMC,OAAO,GAAG;EACZC,MAAMA,CAACC,IAAI,EAAE;IACT,OAAOC,KAAK,CACP,uCAAsCD,IAAK,aAAY,EACxD;MACIE,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,MAAO;MACpC;IACJ,CAEJ,CAAC,CACIO,IAAI,CAAEC,QAAQ,IAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,YAAY,IAAK;MACpB,MAAMC,KAAK,GAAGD,YAAY,CAACE,MAAM,CAACD,KAAK;MACvC,MAAME,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC;MACvC,OAAOE,UAAU;IACrB,CAAC,CAAC;EACV,CAAC;EAEDG,IAAIA,CAACC,aAAa,EAAEC,cAAc,EAAE;IAChC,OAAOd,KAAK,CACP,+BAA8B,EAC/B;MACIC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,MAAO;MACpC;IACJ,CACJ,CAAC,CACIO,IAAI,CAAEC,QAAQ,IAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,YAAY,IAAK;MACpB,MAAMS,OAAO,GAAGT,YAAY,CAACU,EAAE;MAC/B,OAAOhB,KAAK,CACP,oCAAmCe,OAAQ,YAAW,EACvD;QACIE,MAAM,EAAE,MAAM;QACdhB,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASN,MAAO;QACpC,CAAC;QACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB,MAAM,EAAG,GAAEP,aAAc,EAAC;UAC1B,aAAa,EAAE,0BAA0B;UACzC,QAAQ,EAAE;QACd,CAAC;MACL,CACJ,CAAC,CACIV,IAAI,CAAEkB,cAAc,IAAK;QACtB,OAAOA,cAAc,CAAChB,IAAI,CAAC,CAAC;MAChC,CAAC,EAAEiB,YAAY,IAAIC,OAAO,CAACC,GAAG,CAACF,YAAY,CAACG,OAAO,CACnD,CAAC,CAACtB,IAAI,CAACuB,kBAAkB,IAAI;QACzB,MAAMC,WAAW,GAAGD,kBAAkB,CAACV,EAAE;QACzCO,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3BD,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAAGI,KAAK,CAACC,OAAO,CAACf,cAAc,CAAC,CAAC;QAC7E,OAAOd,KAAK,CACP,oCAAmCe,OAAQ,cAAaY,WAAY,SAAQ,EAC7E;UACIV,MAAM,EAAE,MAAM;UACdhB,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASN,MAAO;UACpC,CAAC;UACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjB,MAAM,EAAG,GAAEN,cAAe,EAAC;YAC3B,UAAU,EAAE;UAChB,CAAC;QACL,CACJ,CAAC;MACL,CAAC,CAAC;IAEV,CAAC,CAAC,CAEDgB,KAAK,CAAEC,KAAK,IAAK;MACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CAAC;EACV;AACJ,CAAC;AAGD,eAAelC,OAAO;;AAItB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}