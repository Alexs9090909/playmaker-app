{"ast":null,"code":"const BASE_URL = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = '?response_type=token';\nconst CLIENT_ID = \"&client_id=92b7e448f7fe406eaef359748343fe84\";\nconst REDIRECT_URL = \"&redirect_uri=http://localhost:3000/\";\nconst SCOPE = '&scope=ugc-image-upload user-read-playback-state user-modify-playback-state user-read-currently-playing playlist-modify-public playlist-modify-private playlist-read-private playlist-read-collaborative';\nlet TOKEN = null;\n\n/*  let apiKey = \"BQCIHk_B6sJGR5f0fhBGM8RI7RzvIWsuCANY6NiKAheSpKsteRPEUTU50kmObhMsHq6xitwlf0_MhjoyZVLnxynTbsnmYF1ewXe4zXdhO9IWo4zp3Z09QiP8xI4awFxC36RdVRU5miChXDanugLoF06-_jI9XoUMu38PVYTDtcjqD14txydNHW_DPG5VLiKgSwo73583W9Zoqv1n7KmRzeXfr2eKeNKsdFHeZXKm3uVNbMq-HHelM6x_3BS6jvQRGhMAHKXV7Q\" */ // Access token à renouveler toutes les heures \n\nconst getToken = () => {\n  if (TOKEN) {\n    return TOKEN;\n  } else if (window.location.hash.length > 1) {\n    const hashParameters = {};\n    // window.location.hash.split('&').forEach(i => hashParameters[i] = i);\n    window.location.hash.slice(1) // to remove # sign\n    .split('&') // to split to paramater/value groups))\n    .forEach(item => {\n      const parameter = item.split('=');\n      hashParameters[parameter[0]] = parameter[1];\n    });\n    TOKEN = hashParameters.access_token;\n    window.history.pushState('Access Token', '', '/');\n    return TOKEN;\n  } else if (!TOKEN) {\n    const URL = BASE_URL + RESPONSE_TYPE + CLIENT_ID + SCOPE + REDIRECT_URL;\n    window.location = URL;\n  }\n};\nlet apiKey = TOKEN;\nconsole.log(TOKEN);\nconst Spotify = {\n  search(term) {\n    return;\n    fetch(`https://api.spotify.com/v1/search?q=${term}&type=track`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      const items = jsonResponse.tracks && jsonResponse.tracks.items; // Vérification de l'existence de jsonResponse.tracks\n      if (items) {\n        const itemsArray = Object.values(items);\n        return itemsArray;\n      } else {\n        console.log(apiKey);\n        console.error('La propriété \"tracks\" est manquante dans la réponse de l\\'API.');\n        return [];\n      }\n    });\n  },\n  save(playlistTitle, playlistTracks) {\n    return fetch(`https://api.spotify.com/v1/me`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      console.log(jsonResponse);\n      const user_id = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${user_id}/playlists`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          \"name\": playlistTitle,\n          \"description\": \"New playlist description\",\n          \"public\": false\n        })\n      }).then(secondResponse => {\n        return secondResponse.json();\n      }, networkError => console.log(networkError.message)).then(secondJsonResponse => {\n        const playlist_id = secondJsonResponse.id;\n        // console.log('is playlistTracks an array ? > ' + Array.isArray(playlistTracks));\n        // console.log(\"content of playlistTracks is : \" + playlistTracks);\n        return fetch(`https://api.spotify.com/v1/users/${user_id}/playlists/${playlist_id}/tracks`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiKey}`\n          },\n          body: JSON.stringify({\n            \"uris\": playlistTracks\n          })\n        });\n      });\n    }).catch(error => {\n      console.error('Erreur lors de la requête  :', error);\n    });\n  }\n};\nexport { Spotify, getToken };\n\n/*\n\nhttp://localhost:3000/#access_token=\n\nBQAXmZzANGKXOSaIQaxRlngYF13k3-vjkcTYGIoLthSMBcU_tiYhDtRSeZJr07BxjbZgLR5mmOcsYnnarZYWhK-t-0uX5DS2Vc9pGVwcAOO4GbZiwKC81S1vtLvKMYJhcSCO0kXQa07E1l3yJIm2MIXQ4BTDtoUV1JvHUr2pZ0OKrrP3nPgcYLr2po5V8xtLUhp3MSvAXSf7OW1PiwVMJlEqUY3T8RxUXbjuoIpip4oTh681LyGzHRA5vjmz\n\n&token_type=Bearer&expires_in=3600&state=XPubkNMqxCslAjw0\n\n\nhttp://localhost:3000/#access_token=\n\nBQBQu603MWS2Q51LqWhhpzvX359-d8oxQ4U1YseT05hjzRPKTGV2HXUOabr06FYhbocyvuSDKN-iOSdVfI3Z46y19GtFUr7Gfie1LKnH3VIeoAR-aCtfRqQ28u_FYQ1EnH2cnP7YI8u16cAympJhVNG7PolFX8fRKTI2yLftSx9cJASrv8Yg6c21xrjVOzFYUJwU-CdVByVsIzXohZ8pDtw5E6Pjr0Ws2pwXWxi0tdg3UaZ7Bb_ePpU1swSo\n\n&token_type=Bearer&expires_in=3600&state=emGMhBkNZ1GqYhQw\n\n\n\nhttp://localhost:3000/#access_token=\n\nBQCIHk_B6sJGR5f0fhBGM8RI7RzvIWsuCANY6NiKAheSpKsteRPEUTU50kmObhMsHq6xitwlf0_MhjoyZVLnxynTbsnmYF1ewXe4zXdhO9IWo4zp3Z09QiP8xI4awFxC36RdVRU5miChXDanugLoF06-_jI9XoUMu38PVYTDtcjqD14txydNHW_DPG5VLiKgSwo73583W9Zoqv1n7KmRzeXfr2eKeNKsdFHeZXKm3uVNbMq-HHelM6x_3BS6jvQRGhMAHKXV7Q\n\n&token_type=Bearer&expires_in=3600&state=uTvo6sv20HoYocs8\n\n\n*/\n\n/* faire ctrl+z pour enlever toutes les lignes du haut et ca revient à avant authorization work */","map":{"version":3,"names":["BASE_URL","RESPONSE_TYPE","CLIENT_ID","REDIRECT_URL","SCOPE","TOKEN","getToken","window","location","hash","length","hashParameters","slice","split","forEach","item","parameter","access_token","history","pushState","URL","apiKey","console","log","Spotify","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","items","tracks","itemsArray","Object","values","error","save","playlistTitle","playlistTracks","user_id","id","method","body","JSON","stringify","secondResponse","networkError","message","secondJsonResponse","playlist_id","catch"],"sources":["/Users/alexandresuteau/Desktop/CODE/CODECADEMY/07_Create a Front-End APP with React/99_PROJECT_Jammming/jammming/src/utils/Spotify.js"],"sourcesContent":["const BASE_URL = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = '?response_type=token';\nconst CLIENT_ID = \"&client_id=92b7e448f7fe406eaef359748343fe84\";\nconst REDIRECT_URL = \"&redirect_uri=http://localhost:3000/\";\nconst SCOPE = '&scope=ugc-image-upload user-read-playback-state user-modify-playback-state user-read-currently-playing playlist-modify-public playlist-modify-private playlist-read-private playlist-read-collaborative';\nlet TOKEN = null;\n\n/*  let apiKey = \"BQCIHk_B6sJGR5f0fhBGM8RI7RzvIWsuCANY6NiKAheSpKsteRPEUTU50kmObhMsHq6xitwlf0_MhjoyZVLnxynTbsnmYF1ewXe4zXdhO9IWo4zp3Z09QiP8xI4awFxC36RdVRU5miChXDanugLoF06-_jI9XoUMu38PVYTDtcjqD14txydNHW_DPG5VLiKgSwo73583W9Zoqv1n7KmRzeXfr2eKeNKsdFHeZXKm3uVNbMq-HHelM6x_3BS6jvQRGhMAHKXV7Q\" */ // Access token à renouveler toutes les heures \n\nconst getToken = () => {\n   \n    if (TOKEN) {\n        return TOKEN;\n    } else if (window.location.hash.length > 1) {\n\n        const hashParameters = {}\n        // window.location.hash.split('&').forEach(i => hashParameters[i] = i);\n        window.location.hash\n            .slice(1) // to remove # sign\n            .split('&') // to split to paramater/value groups))\n            .forEach(item => {\n                const parameter = item.split('=')\n                hashParameters[parameter[0]] = parameter[1];\n            });\n\n        TOKEN = hashParameters.access_token;\n        window.history.pushState('Access Token', '', '/');\n        return TOKEN;\n        \n    } else if (!TOKEN) {\n        const URL = BASE_URL + RESPONSE_TYPE + CLIENT_ID + SCOPE + REDIRECT_URL;\n        window.location = URL;\n    }\n} \n\nlet apiKey = TOKEN; \nconsole.log(TOKEN);\n\nconst Spotify = {\n    search(term) {\n\n\n\n        return \n        \n        fetch(\n            `https://api.spotify.com/v1/search?q=${term}&type=track`,\n            {\n                headers: {\n                    Authorization: `Bearer ${apiKey}`\n                },\n            }\n\n        )\n            .then((response) => {\n                return response.json();\n            })\n            .then((jsonResponse) => {\n                const items = jsonResponse.tracks && jsonResponse.tracks.items; // Vérification de l'existence de jsonResponse.tracks\n                if (items) {\n                    const itemsArray = Object.values(items);\n                    return itemsArray;\n                } else {\n                    console.log(apiKey)\n                    console.error('La propriété \"tracks\" est manquante dans la réponse de l\\'API.');\n                    return [];\n                }\n            })\n    },\n\n    save(playlistTitle, playlistTracks) {\n        return fetch(\n            `https://api.spotify.com/v1/me`,\n            {\n                headers: {\n                    Authorization: `Bearer ${apiKey}`\n                },\n            }\n        )\n            .then((response) => {\n                return response.json();\n            })\n            .then((jsonResponse) => {\n                console.log(jsonResponse)\n                const user_id = jsonResponse.id;\n                return fetch(\n                    `https://api.spotify.com/v1/users/${user_id}/playlists`,\n                    {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${apiKey}`\n                        },\n                        body: JSON.stringify({\n                            \"name\": playlistTitle,\n                            \"description\": \"New playlist description\",\n                            \"public\": false\n                        }),\n                    }\n                )\n                    .then((secondResponse) => {\n                        return secondResponse.json();\n                    }, networkError => console.log(networkError.message)\n                    ).then(secondJsonResponse => {\n                        const playlist_id = secondJsonResponse.id;\n                        // console.log('is playlistTracks an array ? > ' + Array.isArray(playlistTracks));\n                        // console.log(\"content of playlistTracks is : \" + playlistTracks);\n                        return fetch(\n                            `https://api.spotify.com/v1/users/${user_id}/playlists/${playlist_id}/tracks`,\n                            {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    Authorization: `Bearer ${apiKey}`\n                                },\n                                body: JSON.stringify({\n                                    \"uris\": playlistTracks,\n                                }),\n                            }\n                        )\n                    })\n                    ;\n            })\n\n            .catch((error) => {\n                console.error('Erreur lors de la requête  :', error);\n            });\n    }\n}\n\n\nexport { Spotify, getToken };\n\n\n\n/*\n\nhttp://localhost:3000/#access_token=\n\nBQAXmZzANGKXOSaIQaxRlngYF13k3-vjkcTYGIoLthSMBcU_tiYhDtRSeZJr07BxjbZgLR5mmOcsYnnarZYWhK-t-0uX5DS2Vc9pGVwcAOO4GbZiwKC81S1vtLvKMYJhcSCO0kXQa07E1l3yJIm2MIXQ4BTDtoUV1JvHUr2pZ0OKrrP3nPgcYLr2po5V8xtLUhp3MSvAXSf7OW1PiwVMJlEqUY3T8RxUXbjuoIpip4oTh681LyGzHRA5vjmz\n\n&token_type=Bearer&expires_in=3600&state=XPubkNMqxCslAjw0\n\n\nhttp://localhost:3000/#access_token=\n\nBQBQu603MWS2Q51LqWhhpzvX359-d8oxQ4U1YseT05hjzRPKTGV2HXUOabr06FYhbocyvuSDKN-iOSdVfI3Z46y19GtFUr7Gfie1LKnH3VIeoAR-aCtfRqQ28u_FYQ1EnH2cnP7YI8u16cAympJhVNG7PolFX8fRKTI2yLftSx9cJASrv8Yg6c21xrjVOzFYUJwU-CdVByVsIzXohZ8pDtw5E6Pjr0Ws2pwXWxi0tdg3UaZ7Bb_ePpU1swSo\n\n&token_type=Bearer&expires_in=3600&state=emGMhBkNZ1GqYhQw\n\n\n\nhttp://localhost:3000/#access_token=\n\nBQCIHk_B6sJGR5f0fhBGM8RI7RzvIWsuCANY6NiKAheSpKsteRPEUTU50kmObhMsHq6xitwlf0_MhjoyZVLnxynTbsnmYF1ewXe4zXdhO9IWo4zp3Z09QiP8xI4awFxC36RdVRU5miChXDanugLoF06-_jI9XoUMu38PVYTDtcjqD14txydNHW_DPG5VLiKgSwo73583W9Zoqv1n7KmRzeXfr2eKeNKsdFHeZXKm3uVNbMq-HHelM6x_3BS6jvQRGhMAHKXV7Q\n\n&token_type=Bearer&expires_in=3600&state=uTvo6sv20HoYocs8\n\n\n*/\n\n\n/* faire ctrl+z pour enlever toutes les lignes du haut et ca revient à avant authorization work */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}